{"version":3,"file":"static/js/309.d7649570.chunk.js","mappings":"sLAEaA,E,QAAeC,GAAAA,IAAH,8P,kHCCZC,EAAeD,EAAAA,GAAAA,KAAH,mFAMZE,GAAgBF,EAAAA,EAAAA,IAAOG,EAAAA,EAAPH,CAAH,qRAabI,EAAaJ,EAAAA,GAAAA,OAAH,qqBAwBVK,EAAqBL,EAAAA,GAAAA,IAAH,8F,mBCpChB,SAASM,EAAT,GAA4C,IAAtBC,EAAqB,EAArBA,QAASC,EAAY,EAAZA,SACtCC,EAAmBF,EACrBG,EAAAA,GAAW,CACTC,MAAOD,EAAAA,KAAaC,MAAM,yBAAyBC,SAAS,YAC5DC,SAAUH,EAAAA,KACPI,IAAI,EAAG,iCACPF,SAAS,cAEdF,EAAAA,GAAW,CACTK,KAAML,EAAAA,KACHI,IAAI,EAAG,iCACPF,SAAS,YACZD,MAAOD,EAAAA,KAAaC,MAAM,yBAAyBC,SAAS,YAC5DC,SAAUH,EAAAA,KACPI,IAAI,EAAG,iCACPF,SAAS,cAGZI,GAASC,EAAAA,EAAAA,IAAU,CACvBC,cAAe,CACbH,KAAM,GACNJ,MAAO,GACPE,SAAU,IAEZJ,iBAAAA,EACAD,SAAU,SAACW,EAAOC,GAChBZ,EAASW,EAAOC,EAEjB,IAGH,OACE,UAACnB,EAAD,CAAcO,SAAUQ,EAAOK,aAA/B,WACId,IACA,iCACE,SAACL,EAAD,CACEoB,KAAK,OACLC,GAAG,OACHR,KAAK,OACLS,MAAM,WACNC,QAAQ,WACRC,SAAUV,EAAOW,aACjBC,OAAQZ,EAAOa,WACfC,MAAOd,EAAOG,OAAOJ,OAEtBC,EAAOe,QAAQhB,MAAQC,EAAOgB,OAAOjB,MACpC,SAACV,EAAD,UAAqBW,EAAOgB,OAAOjB,OACjC,SAIR,iCACE,SAACb,EAAD,CACEoB,KAAK,QACLC,GAAG,QACHR,KAAK,QACLS,MAAM,QACNC,QAAQ,WACRC,SAAUV,EAAOW,aACjBC,OAAQZ,EAAOa,WACfC,MAAOd,EAAOG,OAAOR,QAEtBK,EAAOe,QAAQpB,OAASK,EAAOgB,OAAOrB,OACrC,SAACN,EAAD,UAAqBW,EAAOgB,OAAOrB,QACjC,SAEN,iCACE,SAACT,EAAD,CACEoB,KAAK,WACLC,GAAG,WACHR,KAAK,WACLS,MAAM,WACNC,QAAQ,WACRC,SAAUV,EAAOW,aACjBC,OAAQZ,EAAOa,WACfC,MAAOd,EAAOG,OAAON,WAEtBG,EAAOe,QAAQlB,UAAYG,EAAOgB,OAAOnB,UACxC,SAACR,EAAD,UAAqBW,EAAOgB,OAAOnB,WACjC,SAEN,SAACT,EAAD,CAAYkB,KAAK,SAAjB,SAA2Bf,EAAU,QAAU,eAGpD,C,2FCvED,UAhBA,WACE,IAAM0B,GAAWC,EAAAA,EAAAA,MAOjB,OACE,UAAC,IAAD,YACE,wBAAI,2BACJ,SAAC,IAAD,CAAY3B,SAAS,EAAMC,SARV,SAAA2B,GACnB,IACMC,EAAkB,CAAEzB,MADEwB,EAApBxB,MACyBE,SADLsB,EAAbtB,UAEfoB,GAASI,EAAAA,EAAAA,IAAMD,GAChB,MAOF,C","sources":["components/ContactLayout/ContactLayout.styled.js","components/SignupForm/SignupForm.styled.js","components/SignupForm/SignupForm.jsx","components/pages/loginPage/LoginPage.jsx"],"sourcesContent":["import styled from \"styled-components\";\n\nexport const ContentBlock = styled.div`\n    border-radius: 8px;\n    padding: 20px;\n    background-color: white;\n    box-shadow: rgba(0, 0, 0, 0.12) 0px 1px 3px, rgba(0, 0, 0, 0.24) 0px 1px 2px;\n    & h1, h2 {\n        margin: 0;\n        margin-bottom: 20px;\n    }\n`;","import styled from 'styled-components';\nimport { TextField } from '@mui/material';\n\nexport const RegisterForm = styled.form`\n  display: flex;\n  flex-direction: column;\n  gap: 16px;\n`;\n\nexport const FormTextField = styled(TextField)`\n  .MuiInputLabel-root:not([data-shrink='true']) {\n    transform: translate(14px, 10px) scale(1);\n    font-size: 14px;\n  }\n  /* & label.Mui-focused { top:0;} */\n  & input {\n    height: 18px;\n    padding-bottom: 10px;\n    padding-top: 10px;\n  }\n`;\n\nexport const FormButton = styled.button`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  border: none;\n  cursor: pointer;\n  max-height: 38px;\n  padding: 12px 16px;\n  border-radius: 4px;\n  text-decoration: none;\n  color: white;\n  font-weight: 500;\n  font-size: 16px;\n  background-color: rgb(81, 203, 238);\n  transition: all 0.25s ease-in-out;\n  &:hover {\n    box-shadow: 0 0 10px rgba(81, 203, 238, 0.8),\n      0 0 20px rgba(81, 203, 238, 0.6), 0 0 30px rgba(81, 203, 238, 0.4);\n  }\n  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen',\n    'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue',\n    sans-serif;\n`;\n\nexport const ErrorMessageStyled = styled.div`\n  font-size: 14px;\n  line-height: calc(14 / 12);\n  color: #da1414;\n`;\n","import React from 'react';\nimport * as Yup from 'yup';\nimport {\n  RegisterForm,\n  FormTextField,\n  FormButton,\n  ErrorMessageStyled,\n} from './SignupForm.styled';\nimport { useFormik } from 'formik';\n\nexport default function SignupForm({ isLogin, onSubmit }) {\n  const validationSchema = isLogin\n    ? Yup.object({\n        email: Yup.string().email('Invalid email address').required('Required'),\n        password: Yup.string()\n          .min(7, 'Must be at least 7 characters')\n          .required('Required'),\n      })\n    : Yup.object({\n        name: Yup.string()\n          .min(5, 'Must be at least 5 characters')\n          .required('Required'),\n        email: Yup.string().email('Invalid email address').required('Required'),\n        password: Yup.string()\n          .min(7, 'Must be at least 7 characters')\n          .required('Required'),\n      });\n\n  const formik = useFormik({\n    initialValues: {\n      name: '',\n      email: '',\n      password: '',\n    },\n    validationSchema,\n    onSubmit: (values,actions) => {\n      onSubmit(values,actions);\n\n    },\n  });\n\n  return (\n    <RegisterForm onSubmit={formik.handleSubmit}>\n      {!isLogin && (\n        <>\n          <FormTextField\n            type=\"text\"\n            id=\"name\"\n            name=\"name\"\n            label=\"Username\"\n            variant=\"outlined\"\n            onChange={formik.handleChange}\n            onBlur={formik.handleBlur}\n            value={formik.values.name}\n          />\n          {formik.touched.name && formik.errors.name ? (\n            <ErrorMessageStyled>{formik.errors.name}</ErrorMessageStyled>\n          ) : null}\n        </>\n      )}\n\n      <>\n        <FormTextField\n          type=\"email\"\n          id=\"email\"\n          name=\"email\"\n          label=\"Email\"\n          variant=\"outlined\"\n          onChange={formik.handleChange}\n          onBlur={formik.handleBlur}\n          value={formik.values.email}\n        />\n        {formik.touched.email && formik.errors.email ? (\n          <ErrorMessageStyled>{formik.errors.email}</ErrorMessageStyled>\n        ) : null}\n      </>\n      <>\n        <FormTextField\n          type=\"password\"\n          id=\"password\"\n          name=\"password\"\n          label=\"Password\"\n          variant=\"outlined\"\n          onChange={formik.handleChange}\n          onBlur={formik.handleBlur}\n          value={formik.values.password}\n        />\n        {formik.touched.password && formik.errors.password ? (\n          <ErrorMessageStyled>{formik.errors.password}</ErrorMessageStyled>\n        ) : null}\n      </>\n      <FormButton type=\"submit\">{isLogin ? 'Login' : 'Register'}</FormButton>\n    </RegisterForm>\n  );\n}\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { logIn } from 'redux/authorize/operations';\n\nimport { ContentBlock } from 'components/ContactLayout/ContactLayout.styled';\nimport SignupForm from 'components/SignupForm/SignupForm';\n\nfunction LoginPage() {\n  const dispatch = useDispatch();\n\n  const handleSubmit = e => {\n    const { email, password } = e;\n    const loginDataObject = { email, password };\n    dispatch(logIn(loginDataObject));\n  };\n  return (\n    <ContentBlock>\n      <h2>Login to your Account</h2>\n      <SignupForm isLogin={true} onSubmit={handleSubmit} />\n    </ContentBlock>\n  );\n}\n\nexport default LoginPage;\n"],"names":["ContentBlock","styled","RegisterForm","FormTextField","TextField","FormButton","ErrorMessageStyled","SignupForm","isLogin","onSubmit","validationSchema","Yup","email","required","password","min","name","formik","useFormik","initialValues","values","actions","handleSubmit","type","id","label","variant","onChange","handleChange","onBlur","handleBlur","value","touched","errors","dispatch","useDispatch","e","loginDataObject","logIn"],"sourceRoot":""}