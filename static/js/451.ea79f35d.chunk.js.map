{"version":3,"file":"static/js/451.ea79f35d.chunk.js","mappings":"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","sources":["components/ContactLayout/ContactLayout.styled.js","components/AddContactForm/Form.styled.js","redux/selectors.js","components/pages/registerPage/RegisterPage.styled.js","components/AddContactForm/Form.jsx","components/Filter/Filter.styled.js","components/Filter/Filter.jsx","components/contactsList/ContactsList.styled.js","components/contactsList/TrashIcon.styled.js","components/contactsList/EditIcon.styled.js","components/contactsList/ContactsList.jsx","components/ContactLayout/ContactLayout.jsx","components/pages/ContactsPage.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const ContentBlock = styled.div`\n  min-width: 248px;\n  border-radius: 8px;\n  padding: 20px;\n  background-color: white;\n  box-shadow: rgba(0, 0, 0, 0.12) 0px 1px 3px, rgba(0, 0, 0, 0.24) 0px 1px 2px;\n  & h1,\n  h2 {\n    margin: 0;\n    margin-bottom: 20px;\n  }\n`;\n","import styled from 'styled-components';\n\nexport const FormStyled = styled.form`\n  margin-bottom: 20px;\n\n  & .form__inputs {\n    display: flex;\n    gap: 15px;\n    align-items: baseline;\n    flex-direction: column;\n  }\n  & .form__inputs p {\n    display: inline-block;\n    margin-right: 10px;\n  }\n\n  & .form__inputs button {\n    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto',\n      'Oxygen', 'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans',\n      'Helvetica Neue', sans-serif;\n    font-weight: 500;\n    background-color: rgb(81, 203, 238);\n    color: white;\n    padding: 0px 15px;\n    border: none;\n    border-radius: 4px;\n    font-size: 16px;\n    cursor: pointer;\n    position: relative;\n    overflow: hidden;\n    height: 36px;\n    display: flex;\n    align-items: center;\n    gap: 10px;\n    transition: all 0.25s ease-in-out;\n  }\n\n  & .loading-icon {\n    animation: animate 2s infinite;\n  }\n\n  @keyframes animate {\n    0% {\n      transform: rotate(0deg);\n    }\n    100% {\n      transform: rotate(360deg);\n    }\n  }\n\n  & .form__inputs button:hover {\n    box-shadow: 0 0 10px rgba(81, 203, 238, 0.8),\n      0 0 20px rgba(81, 203, 238, 0.6), 0 0 30px rgba(81, 203, 238, 0.4);\n  }\n`;\n","import { createSelector } from '@reduxjs/toolkit';\n\nexport const getContacts = state => state.contacts.items;\nexport const getIsLoading = state => state.contacts.isLoading;\nexport const getError = state => state.contacts.error;\nexport const getFilter = state => state.filter;\nexport const getIsAddContactPending = state => state.contacts.isAddContactPending;\n\nexport const getVisibleContacts = createSelector(\n  [getContacts, getFilter],\n  (contacts, filterValue) => {\n    const lowerCaseFilterValue = filterValue.toLowerCase();\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(lowerCaseFilterValue)\n    );\n  }\n);\n","import styled from 'styled-components';\nimport { TextField } from '@mui/material';\n\nexport const RegisterForm = styled.form`\n  display: flex;\n  flex-direction: column;\n  gap: 16px;\n`;\n\nexport const FormTextField = styled(TextField)`\n  .MuiInputLabel-root:not([data-shrink='true']) {\n    transform: translate(14px, 10px) scale(1);\n    font-size: 14px;\n  }\n  /* & label.Mui-focused { top:0;} */\n  & input {\n    height: 18px;\n    padding-bottom: 10px;\n    padding-top: 10px;\n  }\n`;\n\nexport const FormButton = styled.button`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  border: none;\n  cursor: pointer;\n  max-height: 38px;\n  padding: 12px 16px;\n  border-radius: 4px;\n  text-decoration: none;\n  color: white;\n  font-weight: 500;\n  font-size: 16px;\n  background-color: rgb(81, 203, 238);\n  transition: all 0.25s ease-in-out;\n  &:hover {\n    box-shadow: 0 0 10px rgba(81, 203, 238, 0.8),\n      0 0 20px rgba(81, 203, 238, 0.6), 0 0 30px rgba(81, 203, 238, 0.4);\n  }\n  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen',\n    'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue',\n    sans-serif;\n`;\n","import React, { useState } from 'react';\nimport { FormStyled } from './Form.styled';\nimport { FaPlus } from 'react-icons/fa';\nimport { LuLoader2 } from 'react-icons/lu';\nimport { addContact } from 'api-functions/api';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getContacts, getIsAddContactPending } from 'redux/selectors';\nimport { FormTextField } from 'components/pages/registerPage/RegisterPage.styled';\n\n\nconst Form = () => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const dispatch = useDispatch();\n  const contacts = useSelector(getContacts);\n  const isAddContactLoading = useSelector(getIsAddContactPending);\n\n  const handleChange = e => {\n    if (e.currentTarget.name === 'name') {\n      setName(e.currentTarget.value);\n    } else {\n      setNumber(e.currentTarget.value);\n    }\n  };\n\n  const addContactItem = (name, number) => {\n    const existingContact = contacts.find(\n      contact => name.toLowerCase() === contact.name.toLowerCase()\n    );\n\n    if (existingContact) {\n      return null;\n    }\n    const userObj = {\n      name,\n      number,\n    };\n    return userObj;\n  };\n\n  const submitHandler = e => {\n    e.preventDefault();\n    const newContact = addContactItem(name, number);\n    if (newContact === null) {\n      return alert(`${name} is already in contacts`);\n    } else {\n      dispatch(addContact(addContactItem(name, number)));\n      setName('');\n      setNumber('');\n    }\n  };\n\n  return (\n    <FormStyled onSubmit={submitHandler}>\n      <div className=\"form__inputs\">\n        <FormTextField\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[A-Za-z\\u0080-\\uFFFF ']+$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n          onChange={handleChange}\n          value={name}\n          autoComplete=\"off\"\n          label=\"Name\"\n          variant=\"outlined\"\n        />\n        <FormTextField\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"^(\\+?[0-9.\\(\\)\\-\\s]*)$\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n          onChange={handleChange}\n          value={number}\n          autoComplete=\"off\"\n          label=\"Phone\"\n          variant=\"outlined\"\n        />\n\n        <button type=\"submit\" disabled={isAddContactLoading}>\n          {isAddContactLoading ? (\n            <LuLoader2 className=\"loading-icon\"></LuLoader2>\n          ) : (\n            <FaPlus></FaPlus>\n          )}{' '}\n          Add Contact\n        </button>\n      </div>\n      \n    </FormStyled>\n  );\n};\n\nexport default Form;\n","import styled from 'styled-components';\n\nexport const FilterStyled = styled.form`\n  & label {\n    display: flex;\n    gap: 20px;\n    align-items: baseline;\n    font-weight: 500;\n  }\n  & input {\n    max-width: 150px;\n    transition: all 0.3s ease-in-out;\n    outline: none;\n    padding: 9px;\n    border: 1px solid #dddddd;\n    border-radius: 3px;\n    height: 18px;\n  }\n  & input:focus {\n    outline: none;\n    box-shadow: 0 0 5px rgba(81, 203, 238, 1);\n    padding: 9px;\n    border: 1px solid rgba(81, 203, 238, 1);\n  }\n`;\n","import React from 'react';\n// import PropTypes from 'prop-types';\nimport { FilterStyled } from './Filter.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { filterItems } from 'redux/slices/filterSlice';\nimport { getFilter } from 'redux/selectors';\n\nconst Filter = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(getFilter);\n\n  const changeFilter = e => {\n    dispatch(filterItems(e.currentTarget.value.trim()));\n  };\n  return (\n    <FilterStyled>\n      <label>\n        Filter by name:\n        <input\n          className=\"filter-input\"\n          type=\"text\"\n          value={filter}\n          onChange={changeFilter}\n        />\n      </label>\n    </FilterStyled>\n  );\n};\n\nexport default Filter;\n\n// Filter.propTypes = {\n//   value: PropTypes.string.isRequired,\n//   onChange: PropTypes.func.isRequired,\n// };\n","import styled from 'styled-components';\n\nexport const ContactsStyled = styled.ul`\n  display: flex;\n  flex-direction: column;\n\n  & .contact__data {\n    display: flex;\n    flex-direction: column;\n    gap: 4px;\n  }\n  & .item {\n    padding: 6px 20px;\n    margin-bottom: 10px;\n    border-radius: 4px;\n    box-shadow: rgba(0, 0, 0, 0.12) 0px 1px 3px, rgba(0, 0, 0, 0.24) 0px 1px 2px;\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    gap: 25px;\n    transition: box-shadow 0.25s ease-in-out;\n    background-color: white;\n    & .contact__data {\n      flex-grow: 1;\n      align-items: flex-start;\n    }\n  }\n  & .name {\n    font-weight: 500;\n  }\n  & .phone {\n    font-style: italic;\n  }\n\n  & .item:hover .name {\n    animation: tilt-shaking 0.25s infinite;\n  }\n  & .item:hover {\n    box-shadow: 0 1px 6px rgba(81, 203, 238, 0.6);\n  }\n\n  @keyframes tilt-shaking {\n    0% {\n      transform: rotate(0deg);\n    }\n    25% {\n      transform: rotate(5deg);\n    }\n    50% {\n      transform: rotate(0eg);\n    }\n    75% {\n      transform: rotate(-5deg);\n    }\n    100% {\n      transform: rotate(0deg);\n    }\n  }\n\n  & button {\n    background-color: #ee4b2b;\n    color: white;\n    padding: 0px 15px;\n    border: none;\n    border-radius: 4px;\n    font-size: 16px;\n    cursor: pointer;\n    position: relative;\n    overflow: hidden;\n    height: 24px;\n  }\n`;\n","import styled from 'styled-components';\nimport { FaTrashAlt } from 'react-icons/fa';\n\nconst StyledTrashIcon = styled(FaTrashAlt)`\n  font-size: 20px;\n  color: #ee4b2b;\n  cursor: pointer;\n`;\n\nexport default StyledTrashIcon;\n","import styled from 'styled-components';\nimport { FaEdit } from 'react-icons/fa';\n\nconst StyledEditIcon = styled(FaEdit)`\n  font-size: 22px;\n  color: rgb(81, 203, 238);;\n  cursor: pointer;\n`;\n\nexport default StyledEditIcon;\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { ContactsStyled } from './ContactsList.styled';\nimport StyledTrashIcon from './TrashIcon.styled';\nimport StyledEditIcon from './EditIcon.styled';\nimport { getError, getIsLoading, getVisibleContacts } from 'redux/selectors';\nimport { useSelector } from 'react-redux';\nimport { deleteContact } from 'api-functions/api';\n\nconst ContactsList = () => {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(getIsLoading);\n  const errorMessage = useSelector(getError);\n\n  const contacts = useSelector(getVisibleContacts);\n  return (\n    <div className=\"contacts\">\n      <h2>Contacts List:</h2>\n      {isLoading && !errorMessage && <b>Request in progress...</b>}\n      <ContactsStyled>\n        {contacts.map(({ name, id, number }) => (\n          <li key={id} className=\"item\">\n            <div className=\"contact__data\">\n              <span className=\"name\">\n                {name.charAt(0).toUpperCase() + name.slice(1)}\n              </span>\n              <span className=\"phone\">{number} </span>\n            </div>\n            <StyledEditIcon />\n            <StyledTrashIcon\n              onClick={() => {\n                dispatch(deleteContact(id));\n              }}\n            ></StyledTrashIcon>\n          </li>\n        ))}\n      </ContactsStyled>\n    </div>\n  );\n};\n\nexport default ContactsList;\n","import React from 'react';\nimport Form from 'components/AddContactForm/Form';\nimport Filter from 'components/Filter/Filter';\nimport ContactsList from 'components/contactsList/ContactsList';\nimport { ContentBlock } from './ContactLayout.styled';\n\nfunction ContactLayout() {\n  return (\n    <div>\n      <ContentBlock>\n      <h1>PhoneBook</h1>\n      <Form></Form>\n      <Filter></Filter>\n      </ContentBlock>\n      <ContactsList></ContactsList>\n    </div>\n  );\n}\n\nexport default ContactLayout;\n","import React, { useEffect } from 'react';\nimport { useAuthorize } from 'components/hooks/useAuthorize';\nimport ContactLayout from 'components/ContactLayout/ContactLayout';\nimport { fetchContacts } from 'api-functions/api';\nimport { useDispatch } from 'react-redux';\n\nfunction ContactsPage() {\n  const { isLoggedIn } = useAuthorize();\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n  return (\n    <div>{isLoggedIn && <ContactLayout/>}</div>\n  )\n}\n\nexport default ContactsPage"],"names":["ContentBlock","styled","FormStyled","getContacts","state","contacts","items","getIsLoading","isLoading","getError","error","getFilter","filter","getIsAddContactPending","isAddContactPending","getVisibleContacts","createSelector","filterValue","lowerCaseFilterValue","toLowerCase","contact","name","includes","FormTextField","TextField","useState","setName","number","setNumber","dispatch","useDispatch","useSelector","isAddContactLoading","handleChange","e","currentTarget","value","addContactItem","find","onSubmit","preventDefault","alert","addContact","className","type","pattern","title","required","onChange","autoComplete","label","variant","disabled","FilterStyled","filterItems","trim","ContactsStyled","FaTrashAlt","FaEdit","errorMessage","map","id","charAt","toUpperCase","slice","onClick","deleteContact","isLoggedIn","useAuthorize","useEffect","fetchContacts"],"sourceRoot":""}