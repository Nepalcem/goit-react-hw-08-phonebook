{"version":3,"file":"static/js/169.8a50939c.chunk.js","mappings":"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","sources":["components/ContactLayout/ContactLayout.styled.js","components/AddContactForm/Form.styled.js","redux/selectors.js","components/pages/registerPage/RegisterPage.styled.js","components/AddContactForm/Form.jsx","components/Filter/Filter.styled.js","components/Filter/Filter.jsx","components/contactsList/ContactsList.styled.js","components/contactsList/TrashIcon.styled.js","components/EditModal/EditIcon.styled.js","components/EditModal/ModalForm/ModalForm.styled.js","components/EditModal/ModalForm/ModalForm.jsx","components/EditModal/CloseIcon/CloseIcon.jsx","components/EditModal/modalStyles.js","components/EditModal/EditModal.jsx","components/contactsList/CallIcon.jsx","components/contactsList/ContactsPreloader/ContactsPreloader.styled.js","components/contactsList/ContactsPreloader/ContactsPreloader.jsx","components/contactsList/ContactsList.jsx","components/ContactLayout/ContactLayout.jsx","components/pages/ContactsPage.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport { brownAccent } from 'utils/globalVariables';\n\nexport const ContentBlock = styled.div`\n  min-width: 248px;\n  border-radius: 8px;\n  padding: 20px;\n  background-color: white;\n  margin-bottom: 30px;\n  box-shadow: rgba(0, 0, 0, 0.12) 0px 1px 3px, rgba(0, 0, 0, 0.24) 0px 1px 2px;\n  & h1,\n  h2 {\n    color: ${brownAccent};\n  }\n`;\n","import styled from 'styled-components';\n\nexport const FormStyled = styled.form`\n  margin: 30px auto;\n  display: flex;\n  gap: 15px;\n  max-width: 360px;\n  flex-direction: column;\n\n  & button {\n    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto',\n      'Oxygen', 'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans',\n      'Helvetica Neue', sans-serif;\n    font-weight: 500;\n    background-color: rgb(81, 203, 238);\n    color: white;\n    padding: 0px 25px;\n    border: none;\n    border-radius: 4px;\n    font-size: 16px;\n    cursor: pointer;\n    position: relative;\n    overflow: hidden;\n    height: 36px;\n    max-width: 180px;\n    margin-left: auto;\n    margin-right: auto;\n    display: flex;\n    align-items: center;\n    gap: 10px;\n    transition: all 0.25s ease-in-out;\n  }\n\n  & .loading-icon {\n    animation: animate 2s infinite;\n  }\n\n  @keyframes animate {\n    0% {\n      transform: rotate(0deg);\n    }\n    100% {\n      transform: rotate(360deg);\n    }\n  }\n\n  & button:hover {\n    box-shadow: 0 0 10px rgba(81, 203, 238, 0.8),\n      0 0 20px rgba(81, 203, 238, 0.6), 0 0 30px rgba(81, 203, 238, 0.4);\n  }\n`;\n","import { createSelector } from '@reduxjs/toolkit';\n\nexport const getContacts = state => state.contacts.items;\nexport const getIsLoading = state => state.contacts.isLoading;\nexport const getError = state => state.contacts.error;\nexport const getFilter = state => state.filter;\nexport const getIsAddContactPending = state => state.contacts.isAddContactPending;\n\nexport const getVisibleContacts = createSelector(\n  [getContacts, getFilter],\n  (contacts, filterValue) => {\n    const lowerCaseFilterValue = filterValue.toLowerCase();\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(lowerCaseFilterValue)\n    );\n  }\n);\n","import styled from 'styled-components';\nimport { TextField } from '@mui/material';\n\nexport const RegisterForm = styled.form`\n  display: flex;\n  flex-direction: column;\n  gap: 16px;\n`;\n\nexport const FormTextField = styled(TextField)`\n  .MuiInputLabel-root:not([data-shrink='true']) {\n    transform: translate(14px, 10px) scale(1);\n    font-size: 14px;\n  }\n  & input {\n    height: 18px;\n    padding-bottom: 10px;\n    padding-top: 10px;\n  }\n`;\n\nexport const FormButton = styled.button`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  border: none;\n  cursor: pointer;\n  max-height: 38px;\n  padding: 12px 16px;\n  border-radius: 4px;\n  text-decoration: none;\n  color: white;\n  font-weight: 500;\n  font-size: 16px;\n  background-color: rgb(81, 203, 238);\n  transition: all 0.25s ease-in-out;\n  &:hover {\n    box-shadow: 0 0 10px rgba(81, 203, 238, 0.8),\n      0 0 20px rgba(81, 203, 238, 0.6), 0 0 30px rgba(81, 203, 238, 0.4);\n  }\n  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen',\n    'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue',\n    sans-serif;\n`;\n","import React, { useState } from 'react';\nimport { FormStyled } from './Form.styled';\nimport { FaPlus } from 'react-icons/fa';\nimport { LuLoader2 } from 'react-icons/lu';\nimport { addContact } from 'api-functions/api';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getContacts, getIsAddContactPending } from 'redux/selectors';\nimport { FormTextField } from 'components/pages/registerPage/RegisterPage.styled';\nimport { toast } from 'react-toastify';\n\nconst Form = () => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const dispatch = useDispatch();\n  const contacts = useSelector(getContacts);\n  const isAddContactLoading = useSelector(getIsAddContactPending);\n\n  const handleChange = e => {\n    if (e.currentTarget.name === 'name') {\n      setName(e.currentTarget.value);\n    } else {\n      setNumber(e.currentTarget.value);\n    }\n  };\n\n  const addContactItem = (name, number) => {\n    const existingContact = contacts.find(\n      contact => name.toLowerCase() === contact.name.toLowerCase()\n    );\n\n    if (existingContact) {\n      return null;\n    }\n    const userObj = {\n      name,\n      number,\n    };\n    return userObj;\n  };\n\n  const submitHandler = e => {\n    e.preventDefault();\n    if (name.trim().length === 0 || number.trim().length === 0) {\n      toast.warning('Name or phone must not be empty!');\n      return;\n    }\n    const newContact = addContactItem(name, number);\n    if (newContact === null) {\n      return alert(`${name} is already in contacts`);\n    } else {\n      dispatch(addContact(addContactItem(name, number)));\n      setName('');\n      setNumber('');\n    }\n  };\n\n  return (\n    <FormStyled onSubmit={submitHandler}>\n      <FormTextField\n        type=\"text\"\n        name=\"name\"\n        pattern=\"^[A-Za-z\\u0080-\\uFFFF ']+$\"\n        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n        required\n        onChange={handleChange}\n        value={name}\n        autoComplete=\"off\"\n        label=\"Name\"\n        variant=\"outlined\"\n      />\n      <FormTextField\n        type=\"tel\"\n        name=\"number\"\n        pattern=\"^(\\+?[0-9.\\(\\)\\-\\s]*)$\"\n        title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n        required\n        onChange={handleChange}\n        value={number}\n        autoComplete=\"off\"\n        label=\"Phone\"\n        variant=\"outlined\"\n      />\n\n      <button type=\"submit\" disabled={isAddContactLoading}>\n        {isAddContactLoading ? (\n          <LuLoader2 className=\"loading-icon\"></LuLoader2>\n        ) : (\n          <FaPlus></FaPlus>\n        )}{' '}\n        Add Contact\n      </button>\n    </FormStyled>\n  );\n};\n\nexport default Form;\n","import styled from 'styled-components';\nimport { tablet } from 'utils/globalVariables';\n\nexport const FilterStyled = styled.form`\n  & label {\n    display: flex;\n    gap: 20px;\n    align-items: baseline;\n    font-weight: 500;\n  }\n  & input {\n    max-width: 150px;\n    transition: all 0.3s ease-in-out;\n    outline: none;\n    padding: 9px;\n    border: 1px solid #dddddd;\n    border-radius: 3px;\n    height: 18px;\n  }\n  & input:focus {\n    outline: none;\n    box-shadow: 0 0 5px rgba(81, 203, 238, 1);\n    padding: 9px;\n    border: 1px solid rgba(81, 203, 238, 1);\n  }\n`;\n\nexport const FilterBlock = styled.div`\n  @media screen and (max-width: ${tablet}) {\n    & h2 {\n      margin-bottom: 20px;\n    }\n  }\n\n  @media screen and (min-width: ${tablet}) {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n  }\n`;\n","import React from 'react';\nimport { FilterStyled, FilterBlock } from './Filter.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { filterItems } from 'redux/slices/filterSlice';\nimport { getFilter } from 'redux/selectors';\n\nconst Filter = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(getFilter);\n\n  const changeFilter = e => {\n    dispatch(filterItems(e.currentTarget.value.trim()));\n  };\n  return (\n    <FilterBlock>\n      <h2>Contacts List:</h2>\n      <FilterStyled>\n        <label>\n          Search by name:\n          <input\n            className=\"filter-input\"\n            type=\"text\"\n            value={filter}\n            onChange={changeFilter}\n          />\n        </label>\n      </FilterStyled>\n    </FilterBlock>\n  );\n};\n\nexport default Filter;\n","import styled from 'styled-components';\n\nexport const ContactListWrapper = styled.div`\n  position: relative;\n  min-height: ${props => (props.haveContacts ? 'auto' : '150px')};\n`;\n\nexport const ContactsStyled = styled.ul`\n  display: flex;\n  flex-direction: column;\n\n\n  & .contact__data {\n    display: flex;\n    flex-direction: column;\n    gap: 4px;\n  }\n  & .item {\n    padding: 6px 20px;\n    margin-bottom: 10px;\n    border-radius: 4px;\n    box-shadow: rgba(0, 0, 0, 0.12) 0px 1px 3px, rgba(0, 0, 0, 0.24) 0px 1px 2px;\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    gap: 25px;\n    transition: box-shadow 0.25s ease-in-out;\n    background-color: white;\n    & .contact__data {\n      flex-grow: 1;\n      align-items: flex-start;\n    }\n  }\n  & .name {\n    font-weight: 500;\n  }\n  & .phone {\n    font-style: italic;\n  }\n\n  & .item:hover .name {\n    animation: tilt-shaking 0.25s infinite;\n  }\n  & .item:hover {\n    box-shadow: 0 1px 6px rgba(81, 203, 238, 0.6);\n  }\n\n  @keyframes tilt-shaking {\n    0% {\n      transform: rotate(0deg);\n    }\n    25% {\n      transform: rotate(5deg);\n    }\n    50% {\n      transform: rotate(0eg);\n    }\n    75% {\n      transform: rotate(-5deg);\n    }\n    100% {\n      transform: rotate(0deg);\n    }\n  }\n\n  & button {\n    background-color: #ee4b2b;\n    color: white;\n    padding: 0px 15px;\n    border: none;\n    border-radius: 4px;\n    font-size: 16px;\n    cursor: pointer;\n    position: relative;\n    overflow: hidden;\n    height: 24px;\n  }\n`;\n","import styled from 'styled-components';\nimport { FaTrashAlt } from 'react-icons/fa';\nimport { FaPhoneAlt } from 'react-icons/fa';\n\nexport const StyledTrashIcon = styled(FaTrashAlt)`\n  font-size: 20px;\n  color: #ee4b2b;\n  cursor: pointer;\n`;\n\nexport const StyledCallIcon = styled(FaPhoneAlt)`\n  font-size: 22px;\n  color: #50c878;\n  cursor: pointer;\n`;\n\n","import styled from 'styled-components';\nimport { FaEdit } from 'react-icons/fa';\n\n\nexport const StyledEditIcon = styled(FaEdit)`\n  font-size: 22px;\n  color: rgb(81, 203, 238);\n  cursor: pointer;\n`;\n\n","import styled from 'styled-components';\n\nexport const ModalFormStyled = styled.form`\n  margin: 30px auto;\n  display: flex;\n  gap: 15px;\n  max-width: 360px;\n  flex-direction: column;\n\n  & button {\n    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto',\n      'Oxygen', 'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans',\n      'Helvetica Neue', sans-serif;\n    font-weight: 500;\n    background-color: rgb(81, 203, 238);\n    color: white;\n    padding: 0px 25px;\n    border: none;\n    border-radius: 4px;\n    font-size: 16px;\n    cursor: pointer;\n    position: relative;\n    overflow: hidden;\n    height: 36px;\n    max-width: 180px;\n    margin-left: auto;\n    margin-right: auto;\n    display: flex;\n    align-items: center;\n    gap: 10px;\n    transition: all 0.25s ease-in-out;\n  }\n\n  & .loading-icon {\n    animation: animate 2s infinite;\n  }\n\n  @keyframes animate {\n    0% {\n      transform: rotate(0deg);\n    }\n    100% {\n      transform: rotate(360deg);\n    }\n  }\n\n  & button:hover {\n    box-shadow: 0 0 10px rgba(81, 203, 238, 0.8),\n      0 0 20px rgba(81, 203, 238, 0.6), 0 0 30px rgba(81, 203, 238, 0.4);\n  }\n`;\n","import React, { useState } from 'react';\nimport { ModalFormStyled } from './ModalForm.styled';\nimport { FaCheck } from 'react-icons/fa';\nimport { LuLoader2 } from 'react-icons/lu';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { FormTextField } from 'components/pages/registerPage/RegisterPage.styled';\nimport { toast } from 'react-toastify';\nimport { updateContact } from 'api-functions/api';\nimport { getIsAddContactPending } from 'redux/selectors';\n\nconst ModalForm = ({ id, name, number }) => {\n  const [contactName, setContactName] = useState(name);\n  const [contactNumber, setContactNumber] = useState(number);\n  const dispatch = useDispatch();\n   const isAddContactLoading = useSelector(getIsAddContactPending);\n\n  const handleChange = e => {\n    if (e.currentTarget.name === 'name') {\n      setContactName(e.currentTarget.value);\n    } else {\n      setContactNumber(e.currentTarget.value);\n    }\n  };\n\n  const submitHandler = e => {\n    e.preventDefault();\n    if (contactName.trim().length === 0 || contactNumber.trim().length === 0) {\n      toast.warning('Name or phone must not be empty!');\n      return;\n    }\n    const updatedContact = {\n      id,\n      name: contactName.trim(),\n      number: contactNumber.trim(),\n    };\n\n    dispatch(updateContact(updatedContact));\n  };\n\n  return (\n    <ModalFormStyled onSubmit={submitHandler}>\n      <FormTextField\n        type=\"text\"\n        name=\"name\"\n        pattern=\"^[A-Za-z\\u0080-\\uFFFF ']+$\"\n        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n        required\n        onChange={handleChange}\n        value={contactName}\n        autoComplete=\"off\"\n        label=\"Name\"\n        variant=\"outlined\"\n      />\n      <FormTextField\n        type=\"tel\"\n        name=\"number\"\n        pattern=\"^(\\+?[0-9.\\(\\)\\-\\s]*)$\"\n        title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n        required\n        onChange={handleChange}\n        value={contactNumber}\n        autoComplete=\"off\"\n        label=\"Phone\"\n        variant=\"outlined\"\n      />\n\n      <button type=\"submit\" disabled={isAddContactLoading} >\n        {isAddContactLoading ? (\n          <LuLoader2 className=\"loading-icon\"></LuLoader2>\n        ) :\n          <FaCheck />\n        }\n        Confirm\n      </button>\n    </ModalFormStyled>\n  );\n};\n\nexport default ModalForm;\n","import { VscChromeClose } from 'react-icons/vsc';\n\nimport React from 'react';\n\nexport default function CloseIcon() {\n  return <VscChromeClose />;\n}\n","import { mainBlueAccent } from 'utils/globalVariables';\n\nexport const mainModalStyle = {\n  position: 'absolute',\n  top: '50%',\n  left: '50%',\n  transform: 'translate(-50%, -50%)',\n  width: 240,\n  '@media (min-width: 768px)': {\n    width: 300, // Adjust the width for screens wider than 600px\n  },\n  bgcolor: 'background.paper',\n  borderRadius: 2,\n  boxShadow: 'rgba(0, 0, 0, 0.12) 0px 1px 3px, rgba(0, 0, 0, 0.24) 0px 1px 2px',\n  p: 4,\n};\n\nexport const closeButtonStyle = {\n  position: 'absolute',\n  top: 12,\n  right: 20,\n  color: `${mainBlueAccent}`,\n};\n","import * as React from 'react';\nimport Box from '@mui/material/Box';\nimport Modal from '@mui/material/Modal';\nimport { StyledEditIcon } from './EditIcon.styled';\nimport ModalForm from './ModalForm/ModalForm';\nimport CloseIcon from './CloseIcon/CloseIcon';\nimport { IconButton } from '@mui/material';\nimport { mainModalStyle, closeButtonStyle } from './modalStyles';\n\n\n\n\nexport default function EditModal({ id, name, number }) {\n  const [open, setOpen] = React.useState(false);\n  const handleOpen = () => setOpen(true);\n  const handleClose = () => setOpen(false);\n\n  return (\n    <>\n      <StyledEditIcon onClick={handleOpen} />\n      <Modal\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"modal-modal-title\"\n        aria-describedby=\"modal-modal-description\"\n      >\n        <Box sx={mainModalStyle}>\n          <h2>Update Contact</h2>\n          <ModalForm id={id} name={name} number={number} />\n          <IconButton\n            edge=\"end\"\n            color=\"inherit\"\n            onClick={handleClose}\n            aria-label=\"close\"\n            style={closeButtonStyle}\n          >\n            <CloseIcon />\n          </IconButton>\n        </Box>\n      </Modal>\n    </>\n  );\n}\n","import React from 'react';\nimport { StyledCallIcon } from './TrashIcon.styled';\n\nexport default function CallIcon({ href }) {\n  return (\n    <a href={`tel:${href}`}>\n      <StyledCallIcon />\n    </a>\n  );\n}\n","import styled from 'styled-components';\n\nexport const LoaderWrapper = styled.div`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  z-index: 100;\n  transform: translate(-50%, -50%);\n\n`;\n","import { LoaderWrapper } from './ContactsPreloader.styled';\nimport { Hourglass } from 'react-loader-spinner';\nimport { burgundyRed } from 'utils/globalVariables';\n\nexport const Loader = () => {\n  return (\n    <LoaderWrapper>\n      <Hourglass\n        height=\"40\"\n        width=\"40\"\n        colors={[burgundyRed, '#770012']}\n        ariaLabel=\"loader\"\n      />\n    </LoaderWrapper>\n  );\n};\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { ContactListWrapper, ContactsStyled } from './ContactsList.styled';\nimport { StyledTrashIcon } from './TrashIcon.styled';\nimport { getError, getIsLoading, getVisibleContacts } from 'redux/selectors';\nimport { useSelector } from 'react-redux';\nimport { deleteContact } from 'api-functions/api';\nimport EditModal from 'components/EditModal/EditModal';\nimport CallIcon from './CallIcon';\nimport { Loader } from './ContactsPreloader/ContactsPreloader';\n\nconst ContactsList = () => {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(getIsLoading);\n  const errorMessage = useSelector(getError);\n  const contacts = useSelector(getVisibleContacts);\n\n  const haveContacts = !!contacts.length;\n \n\n  const handleDelete = (id, name) => {\n     const isConfirmed = window.confirm(\n       `Do you want to delete ${name} from your contacts?`\n     );\n\n     if (isConfirmed) {\n       dispatch(deleteContact(id));\n     }\n  }\n  \n  return (\n    <ContactListWrapper haveContacts={haveContacts}>\n      {isLoading && !errorMessage && <Loader />}\n      <ContactsStyled>\n        {contacts.map(({ name, id, number }) => (\n          <li key={id} className=\"item\">\n            <div className=\"contact__data\">\n              <span className=\"name\">\n                {name.charAt(0).toUpperCase() + name.slice(1)}\n              </span>\n              <span className=\"phone\">{number} </span>\n            </div>\n            <CallIcon href={number} />\n            <EditModal id={id} name={name} number={number} />\n            <StyledTrashIcon\n              onClick={() => {\n                handleDelete(id, name);\n              }}\n            ></StyledTrashIcon>\n          </li>\n        ))}\n      </ContactsStyled>\n    </ContactListWrapper>\n  );\n};\n\nexport default ContactsList;\n","import React from 'react';\nimport Form from 'components/AddContactForm/Form';\nimport Filter from 'components/Filter/Filter';\nimport ContactsList from 'components/contactsList/ContactsList';\nimport { ContentBlock } from './ContactLayout.styled';\n\nfunction ContactLayout() {\n  return (\n    <div>\n      <ContentBlock>\n        <h1>Add a new contact</h1>\n        <Form></Form>\n      </ContentBlock>\n      <ContentBlock>\n        <Filter />\n      </ContentBlock>\n      <ContactsList />\n    </div>\n  );\n}\n\nexport default ContactLayout;\n","import React, { useEffect } from 'react';\nimport { useAuthorize } from 'components/hooks/useAuthorize';\nimport ContactLayout from 'components/ContactLayout/ContactLayout';\nimport { fetchContacts } from 'api-functions/api';\nimport { useDispatch } from 'react-redux';\n\nfunction ContactsPage() {\n  const { isLoggedIn } = useAuthorize();\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n  return (\n    <div>{isLoggedIn && <ContactLayout/>}</div>\n  )\n}\n\nexport default ContactsPage"],"names":["ContentBlock","styled","brownAccent","FormStyled","getContacts","state","contacts","items","getIsLoading","isLoading","getError","error","getFilter","filter","getIsAddContactPending","isAddContactPending","getVisibleContacts","createSelector","filterValue","lowerCaseFilterValue","toLowerCase","contact","name","includes","FormTextField","TextField","useState","setName","number","setNumber","dispatch","useDispatch","useSelector","isAddContactLoading","handleChange","e","currentTarget","value","addContactItem","find","onSubmit","preventDefault","trim","length","alert","addContact","toast","type","pattern","title","required","onChange","autoComplete","label","variant","disabled","className","FilterStyled","FilterBlock","tablet","filterItems","ContactListWrapper","props","haveContacts","ContactsStyled","StyledTrashIcon","FaTrashAlt","StyledCallIcon","FaPhoneAlt","StyledEditIcon","FaEdit","ModalFormStyled","id","contactName","setContactName","contactNumber","setContactNumber","updatedContact","updateContact","CloseIcon","mainModalStyle","position","top","left","transform","width","bgcolor","borderRadius","boxShadow","p","closeButtonStyle","right","color","mainBlueAccent","EditModal","React","open","setOpen","handleClose","onClick","Modal","onClose","Box","sx","IconButton","edge","style","CallIcon","href","LoaderWrapper","Loader","height","colors","burgundyRed","ariaLabel","errorMessage","map","charAt","toUpperCase","slice","window","confirm","deleteContact","handleDelete","isLoggedIn","useAuthorize","useEffect","fetchContacts"],"sourceRoot":""}